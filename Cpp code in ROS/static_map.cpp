#include <ros/ros.h>
#include <visualization_msgs/Marker.h>
#include "std_msgs/String.h"
#include <iostream>
#include <fstream>
#include <cmath>
#include <sstream>
#include <ros/platform.h>
#include <ros/time.h>
#include <stdio.h>
#include <iomanip>

std::vector<float> data_line_x;
std::vector<float> data_line_y;

void csvreadx(){
    std::ifstream inputFile("/home/xu/catkin_ws/src/using_markers/src/x736bridge_1.csv"); //path
    std::string line;
    getline(inputFile,line); //skip1st 
    while (getline(inputFile,line)){
        std::string number;
        std::istringstream readstr(line); //string2stream  //devided with'，'
        for(int j = 1;j <366;j++){ 
            getline(readstr,number,','); 
            data_line_x.push_back(atof(number.c_str())); 
            }
    }
}

void csvready(){
    std::ifstream inputFile("/home/xu/catkin_ws/src/using_markers/src/y736bridge_1.csv"); //path
    std::string line;
    getline(inputFile,line); //skip1st 
    while (getline(inputFile,line)){
        std::string number;
        std::istringstream readstr(line); //string2stream  //devided with'，'
        for(int j = 1;j <366;j++){ 
            getline(readstr,number,','); 
            data_line_y.push_back(atof(number.c_str())); 
            }
    }
}


int main( int argc, char** argv )
{
  ros::init(argc, argv, "points_and_lines736_b1");
  ros::NodeHandle n;
  ros::Publisher marker_pub = n.advertise<visualization_msgs::Marker>("visualization_marker", 10);
  ros::Rate r(30);
  float f = 0.0;
  
  csvreadx();
  csvready();

  while (ros::ok())
  {

    visualization_msgs::Marker points, line_strip, line_list;
    points.header.frame_id = line_strip.header.frame_id = line_list.header.frame_id = "/my_frame";
    points.header.stamp = line_strip.header.stamp = line_list.header.stamp = ros::Time::now();
    points.ns = line_strip.ns = line_list.ns = "points_and_lines736_b1";
    points.action = line_strip.action = line_list.action = visualization_msgs::Marker::ADD;
    points.pose.orientation.w = line_strip.pose.orientation.w = line_list.pose.orientation.w = 1.0;



    points.id = 0;
    line_strip.id = 1;
    line_list.id = 2;



    points.type = visualization_msgs::Marker::POINTS;
    line_strip.type = visualization_msgs::Marker::LINE_STRIP;
   line_list.type = visualization_msgs::Marker::LINE_LIST;



    // POINTS markers use x and y scale for width/height respectively
    points.scale.x = 0.01;
    points.scale.y = 0.01;

    // LINE_STRIP/LINE_LIST markers use only the x component of scale, for the line width
  line_strip.scale.x = 0.1;
   line_list.scale.x = 0.1;



    // Points are green
    points.color.g = 1.0f;
    points.color.a = 1.0;

    // Line strip is red
    line_strip.color.g = 1.0;
    line_strip.color.a = 1.0;

    //Line list is red
    line_list.color.g = 1.0;
    line_list.color.a =1.0;
    
//float arry1[]={7.9900715, 7.9899153, 7.9897592, 7.9896436, 7.9896435, 7.988329, 7.9870481, 7.9870044, 7.986295, 7.9856562, 7.9855311, 7.9847612, 7.984283, 7.9839903, 7.9829472, 7.9829134, 7.981909, 7.9815235, 7.9808779, 7.9801466, 7.9801205, 7.9793311, 7.9787924, 7.9778186, 7.9774655, 7.976785, 7.97635, 7.9761693, 7.9749345, 7.9749049, 7.9743107, 7.9737381, 7.9737274, 7.97319, 7.9727404, 7.9727038, 7.9719149, 7.971901, 7.9712242, 7.9711785, 7.9706369, 7.9706293, 7.970569, 7.9705084, 7.9701576, 7.9700794, 7.96979, 7.9697201, 7.9695368, 7.96947, 7.9692609, 7.9690619, 7.9690018, 7.9688623, 7.9686624, 7.968517, 7.9684616, 7.9682616, 7.9681296, 7.9680754, 7.967917, 7.967905, 7.9678416, 7.9678072, 7.9678179, 7.967837, 7.9678428, 7.9679076, 7.9679276, 7.9679727, 7.9680378, 7.9681055, 7.9681681, 7.9681864, 7.9682332, 7.9682984, 7.9683637, 7.9684288, 7.9684661, 7.9684943, 7.9685572, 7.9686206, 7.9686455, 7.9686529, 7.9686629, 7.9686466, 7.9685496, 7.9685249, 7.9683769, 7.9682323, 7.9681446, 7.9680876, 7.9678378, 7.967787, 7.9674448, 7.9671922, 7.967129, 7.9669959, 7.9664744, 7.9664517, 7.9659604, 7.9655142, 7.9651239, 7.9644459, 7.9644332, 7.9636422, 7.9634216, 7.9632161, 7.9628185, 7.9619687, 7.9611207, 7.9602736, 7.9594207, 7.9585622, 7.9576992, 7.9574514, 7.9568606, 7.9559665, 7.9559066, 7.9551112, 7.9542721, 7.9533865, 7.9525237, 7.9516608, 7.9507918, 7.9499302, 7.9490616, 7.9489102, 7.9481925, 7.9473245, 7.9465793, 7.9464558, 7.945634, 7.9447377, 7.9446312, 7.9438414, 7.9432241, 7.942917, 7.942649, 7.9419444, 7.9416922, 7.9408685, 7.940046, 7.939753, 7.9390073, 7.938579, 7.9382963, 7.9374265, 7.9372494, 7.9368913, 7.9363234, 7.9358381, 7.9355603, 7.9351375, 7.9347207, 7.9346702, 7.9345316, 7.9343085, 7.9339013, 7.9334992, 7.9331024, 7.932711, 7.9323253, 7.9319401, 7.9313741, 7.9308176, 7.9302669, 7.9297221, 7.9291943, 7.9286725, 7.9281567, 7.9277538, 7.9276473, 7.9271441, 7.9266474, 7.9261572, 7.9256736, 7.9251967, 7.9247267, 7.9242692, 7.9238185, 7.9233797, 7.9203335, 7.9198696, 7.9194057, 7.9194066, 7.9194539, 7.9203228, 7.9211992, 7.9220801, 7.9224683, 7.922928, 7.922984, 7.9233898, 7.9238586, 7.923931, 7.9243403, 7.9248289, 7.9249072, 7.9253244, 7.9258267, 7.925909, 7.9263357, 7.9268512, 7.9269378, 7.9273734, 7.9277318, 7.9279017, 7.9279934, 7.9284365, 7.9289774, 7.9290673, 7.9295355, 7.9300997, 7.9302023, 7.9306701, 7.9312429, 7.9313163, 7.9316386, 7.9320458, 7.9322561, 7.9324589, 7.9324854, 7.9325744, 7.9328778, 7.9333024, 7.9337025, 7.9337323, 7.9338053, 7.9344095, 7.9349689, 7.9350738, 7.9352927, 7.935695, 7.9360891, 7.9362273, 7.9363598, 7.9365527, 7.9370109, 7.9374498, 7.9374638, 7.937608, 7.9379114, 7.9383534, 7.9386186, 7.9387898, 7.9392202, 7.9396446, 7.9397383, 7.9400628, 7.9404747, 7.9408059, 7.94088, 7.9412774, 7.941668, 7.9418031, 7.9420517, 7.9424284, 7.9427675, 7.9427832, 7.943626, 7.9436296, 7.9444991, 7.9453434, 7.9453485, 7.9462087, 7.9462125, 7.9465483, 7.9470735, 7.9470761, 7.9479373, 7.9479392, 7.9488045, 7.9488046, 7.9496652, 7.9496654, 7.9505298, 7.9505309, 7.9513917, 7.9513926, 7.9522536, 7.9522543, 7.9531252, 7.953131, 7.9539752, 7.953976, 7.9548187, 7.9548237, 7.9555289, 7.9557422, 7.955755, 7.9565591, 7.9565597, 7.9574205, 7.9574212, 7.9582799, 7.9582802, 7.9591024, 7.9591139, 7.9599215, 7.9599438, 7.9607416, 7.9607746, 7.9615618, 7.9616061, 7.9621586, 7.9623794, 7.9624265, 7.9626863, 7.9629397, 7.9631533, 7.9631865, 7.9634182, 7.9636436, 7.9638488, 7.9638627, 7.9640588, 7.9642494, 7.9644344, 7.9645768, 7.9646136, 7.9647858, 7.9649523, 7.9651054, 7.9651129, 7.9652882, 7.9654559, 7.9655139, 7.965616, 7.965764, 7.9659047, 7.9660381, 7.966041, 7.9661644, 7.9662832, 7.9663946, 7.9663995, 7.9664984, 7.9665946, 7.9666834, 7.9666891, 7.9667648, 7.9668385, 7.9669047, 7.9669101, 7.9669628, 7.9670133, 7.9670563, 7.9670606, 7.9670921, 7.9671201, 7.9671401, 7.9671417, 7.9671521, 7.9671564, 7.9671527, 7.9671512, 7.9671447, 7.9671322, 7.9671026, 7.9671001, 7.9670424, 7.9670413, 7.9669826, 7.9669826, 7.9669185, 7.9669184, 7.9668546, 7.9668545, 7.9667905, 7.9667905, 7.9667266, 7.9667266, 7.9666783, 7.9666629, 7.9666628, 7.9666003, 7.9665997, 7.9665348, 7.9665347, 7.9664709, 7.9664707, 7.966407, 7.9664068, 7.9663512, 7.9663434, 7.9663433, 7.9663261, 7.9663142, 7.9663078, 7.9663077, 7.9663067, 7.9663111, 7.9663207, 7.966321, 7.9663364, 7.9663571, 7.9663816, 7.9663831, 7.9664147, 7.9664516, 7.9664907, 7.966494, 7.9665418, 7.966595, 7.9666475, 7.9666535, 7.9667437, 7.966846, 7.9668528, 7.9670514, 7.9670567, 7.9672565, 7.9672601, 7.9673677, 7.9674611, 7.9674629, 7.9676655, 7.9676655, 7.9678892, 7.9678944, 7.9678978, 7.9679543, 7.9680226, 7.9680987, 7.9681827, 7.9681983, 7.9682756, 7.9683765, 7.9684854, 7.9686021, 7.9686241, 7.9687289, 7.9688637, 7.9690065, 7.9691573, 7.9691895, 7.9693092, 7.9693143, 7.9694789, 7.9696511, 7.9698306, 7.9698729, 7.9700022, 7.9701798, 7.9703638, 7.9704946, 7.9706309, 7.9706791, 7.9708125, 7.9710022, 7.9711993, 7.9714037, 7.9716152, 7.9716554, 7.971834, 7.9720595, 7.9722916, 7.9725301, 7.9727748, 7.9727996, 7.9730255, 7.973282, 7.973544, 7.9738113, 7.9740836, 7.9740877, 7.9743512, 7.9746229, 7.9748987, 7.9751768, 7.975489, 7.9754992, 7.9759588, 7.9764233, 7.9767622, 7.976882, 7.9768916, 7.9773625, 7.9778369, 7.9783062, 7.9783144, 7.9787944, 7.9792773, 7.9797566, 7.9797628, 7.980252, 7.9807435, 7.9812331, 7.9812371, 7.9817315, 7.9822276, 7.9827235, 7.982724, 7.9829636, 7.9832781, 7.9835951, 7.9839125, 7.9842153, 7.9842307, 7.9846094, 7.9849886, 7.9853674, 7.9857142, 7.9857456, 7.9861194, 7.9864921, 7.9868633, 7.987182, 7.987232, 7.9875173, 7.9878005, 7.9880793, 7.9886312, 7.9886731, 7.9900671, 7.9900713, 7.9900715};
//float arry2[]={48.7608036, 48.7604215, 48.7600394, 48.7597567, 48.7597567, 48.7599847, 48.7602069, 48.7602133, 48.7603167, 48.7603748, 48.7603862, 48.7604155, 48.7604084, 48.760404, 48.7603456, 48.7603427, 48.7602568, 48.7602123, 48.7601377, 48.7600221, 48.760018, 48.7598931, 48.7597774, 48.7595681, 48.7594711, 48.7592841, 48.7591646, 48.7591033, 48.7586851, 48.7586728, 48.7584257, 48.7581333, 48.7581279, 48.7577943, 48.7574557, 48.7574281, 48.7567104, 48.7566952, 48.7559499, 48.7558879, 48.7551521, 48.7551389, 48.7550349, 48.75493, 48.7543236, 48.7541421, 48.7534703, 48.7532298, 48.7525991, 48.7522997, 48.7513619, 48.7504694, 48.7502002, 48.7495746, 48.7486778, 48.7480253, 48.747777, 48.7468797, 48.7462876, 48.7459782, 48.7450734, 48.7450051, 48.7441688, 48.7437156, 48.7432555, 48.7424247, 48.7423447, 48.7414494, 48.7411733, 48.7405501, 48.7396508, 48.7387157, 48.7378523, 48.7375982, 48.7369523, 48.7360523, 48.7351505, 48.7342515, 48.7337363, 48.7333456, 48.7324779, 48.7316018, 48.7312571, 48.7307276, 48.730001, 48.7298527, 48.7289724, 48.7287481, 48.7281203, 48.7275069, 48.7272664, 48.7271102, 48.7264251, 48.7262857, 48.7255993, 48.7250927, 48.724994, 48.7247859, 48.7239714, 48.7239359, 48.7233153, 48.7227519, 48.7223441, 48.7216358, 48.7216226, 48.7209292, 48.7207358, 48.7205557, 48.7202353, 48.7195507, 48.7188673, 48.7181848, 48.7174975, 48.7168058, 48.7161103, 48.7159106, 48.7154344, 48.714714, 48.7146656, 48.7140247, 48.7133484, 48.7126345, 48.7119391, 48.7112435, 48.7105431, 48.7098485, 48.7091483, 48.7090262, 48.7084477, 48.7077478, 48.7071471, 48.7070474, 48.7063849, 48.7056622, 48.7055763, 48.704989, 48.70453, 48.7043362, 48.704167, 48.7037225, 48.7035634, 48.7031229, 48.7026831, 48.7025512, 48.7022152, 48.7020224, 48.701895, 48.7016404, 48.7015894, 48.7014861, 48.701344, 48.7012213, 48.7011511, 48.7010165, 48.7008762, 48.7008584, 48.7008092, 48.70073, 48.700578, 48.7004201, 48.7002565, 48.7000871, 48.6999121, 48.6997292, 48.6994604, 48.699188, 48.6989104, 48.6986275, 48.6983454, 48.6980583, 48.6977665, 48.6975318, 48.6974698, 48.6971686, 48.6968625, 48.6965521, 48.696237, 48.6959175, 48.6955936, 48.6952695, 48.6949412, 48.6946125, 48.6921427, 48.6923923, 48.692642, 48.6926428, 48.6926811, 48.6933857, 48.6940962, 48.6948104, 48.6951251, 48.6954695, 48.6955103, 48.6958059, 48.6961381, 48.6961879, 48.6964699, 48.6967973, 48.6968484, 48.6971201, 48.6974384, 48.6974891, 48.6977519, 48.6980606, 48.698111, 48.6983646, 48.6985674, 48.6986637, 48.698714, 48.6989578, 48.6992469, 48.6992936, 48.6995367, 48.6998212, 48.6998714, 48.7001003, 48.7003723, 48.7004072, 48.7005603, 48.700745, 48.700836, 48.7009237, 48.7009346, 48.7009714, 48.7010965, 48.7012632, 48.7014127, 48.7014237, 48.701448, 48.7016483, 48.7018339, 48.7018688, 48.7019415, 48.7020776, 48.7022163, 48.7022671, 48.7023157, 48.7023866, 48.7025627, 48.7027388, 48.7027445, 48.702805, 48.7029321, 48.7031254, 48.7032462, 48.7033242, 48.7035287, 48.7037386, 48.7037868, 48.7039538, 48.7041743, 48.7043587, 48.7044001, 48.7046301, 48.7048653, 48.7049498, 48.7051053, 48.7053501, 48.7055792, 48.7055899, 48.7062712, 48.7062742, 48.7069772, 48.7076599, 48.707664, 48.7083595, 48.7083625, 48.708634, 48.7090586, 48.7090607, 48.7097568, 48.7097584, 48.7104579, 48.7104581, 48.7111538, 48.7111539, 48.7118527, 48.7118535, 48.7125493, 48.71255, 48.713246, 48.7132466, 48.7139504, 48.7139552, 48.7146375, 48.7146381, 48.7153192, 48.7153233, 48.7158932, 48.7160656, 48.7160759, 48.7167256, 48.7167262, 48.7174218, 48.7174224, 48.7181163, 48.7181165, 48.7187809, 48.7187902, 48.7194427, 48.7194607, 48.7201054, 48.7201321, 48.7207681, 48.7208039, 48.7212502, 48.7214323, 48.7214711, 48.7216939, 48.7219201, 48.7221186, 48.7221495, 48.7223737, 48.7226008, 48.7228161, 48.7228307, 48.7230448, 48.7232614, 48.72348, 48.7236554, 48.7237006, 48.7239215, 48.7241444, 48.7243585, 48.7243689, 48.7246259, 48.724885, 48.7249796, 48.7251462, 48.7254013, 48.7256582, 48.7259168, 48.7259227, 48.7261773, 48.7264394, 48.7267028, 48.7267153, 48.7269671, 48.7272327, 48.7274994, 48.7275183, 48.7277678, 48.7280372, 48.7283074, 48.7283327, 48.7285768, 48.7288469, 48.7291175, 48.7291506, 48.7293935, 48.7296698, 48.7299465, 48.7299829, 48.7302213, 48.7304962, 48.7307716, 48.7308121, 48.7309804, 48.731191, 48.7316078, 48.7316424, 48.7324554, 48.7324714, 48.7332972, 48.7332978, 48.7342005, 48.7342021, 48.7351011, 48.735102, 48.7360035, 48.7360043, 48.7369044, 48.7369048, 48.7375847, 48.7378024, 48.7378036, 48.7386828, 48.7386919, 48.7396061, 48.7396075, 48.7405061, 48.7405078, 48.7414065, 48.7414089, 48.7421917, 48.7423066, 48.7423082, 48.7426174, 48.7429291, 48.7432363, 48.7432408, 48.743553, 48.7438652, 48.7441654, 48.7441774, 48.7444877, 48.7447979, 48.7450902, 48.7451079, 48.7454182, 48.7457284, 48.7460137, 48.7460382, 48.7463476, 48.7466567, 48.7469339, 48.7469658, 48.7473926, 48.7478508, 48.7478813, 48.7487702, 48.7487938, 48.7496881, 48.7497038, 48.7501855, 48.7506037, 48.7506118, 48.7515181, 48.7515183, 48.7525194, 48.7525426, 48.752557, 48.7527926, 48.7530438, 48.7532939, 48.753543, 48.7535854, 48.753794, 48.7540437, 48.754292, 48.7545387, 48.754582, 48.7547881, 48.7550356, 48.7552813, 48.7555248, 48.7555739, 48.7557561, 48.7557639, 48.7560007, 48.7562353, 48.7564671, 48.756519, 48.756678, 48.7568865, 48.757093, 48.757233, 48.7573718, 48.7574182, 48.7575467, 48.7577186, 48.7578867, 48.7580511, 48.7582115, 48.7582403, 48.7583681, 48.7585203, 48.7586683, 48.7588117, 48.7589505, 48.7589637, 48.7590845, 48.7592138, 48.7593381, 48.7594573, 48.7595713, 48.7595728, 48.7596763, 48.7597764, 48.7598713, 48.7599606, 48.7600556, 48.7600587, 48.760192, 48.7603193, 48.7604069, 48.7604379, 48.7604404, 48.7605548, 48.7606628, 48.7607627, 48.7607644, 48.7608595, 48.7609481, 48.761029, 48.7610301, 48.7611058, 48.7611749, 48.7612367, 48.7612372, 48.7612929, 48.7613418, 48.761384, 48.761384, 48.7614019, 48.7614221, 48.7614377, 48.7614485, 48.7614544, 48.7614547, 48.7614558, 48.7614503, 48.761438, 48.7614206, 48.761419, 48.7613936, 48.7613617, 48.7613232, 48.7612845, 48.7612784, 48.7612391, 48.7611961, 48.7611496, 48.7610538, 48.7610466, 48.7608044, 48.7608036, 48.7608036};
//float arry2[]={51.434, 51.4335092, 51.4344018, 51.4348784, 51.4349463, 51.4353218, 51.4362487, 51.4362488, 51.4365977, 51.436763, 51.4369159, 51.437199, 51.4372017, 51.4372387, 51.4381615, 51.4381636, 51.4389655, 51.4391331, 51.4391343, 51.4391488, 51.439709, 51.440109, 51.4401106, 51.4409992, 51.4410969, 51.4410982, 51.4415359, 51.4420487, 51.4420495, 51.4430145, 51.4430154, 51.4439583, 51.4439588, 51.4448869, 51.4448874, 51.4453306, 51.4457454, 51.4457844, 51.4457848, 51.4461529, 51.4466775, 51.4466776, 51.447526, 51.4475261, 51.4483501, 51.4483504, 51.4491022, 51.4491025, 51.449821, 51.4505321, 51.4505324, 51.4510372, 51.4512186, 51.4505512, 51.4504304, 51.4504064, 51.4497448, 51.4497447, 51.4490374, 51.4483182, 51.4483181, 51.4475821, 51.4475818, 51.4468288, 51.4460511, 51.446051, 51.4452382, 51.445238, 51.444416, 51.4444158, 51.4435671, 51.4435669, 51.4427083, 51.4427078, 51.4418249, 51.4418245, 51.4409542, 51.4409535, 51.4400564, 51.4400555, 51.439166, 51.4391654, 51.4390033, 51.4382796, 51.4382785, 51.4374056, 51.4374021, 51.4374008, 51.437252, 51.4371038, 51.4369341, 51.4365342, 51.4365341, 51.4356892, 51.4351502, 51.4350834, 51.4348528, 51.434038, 51.4332414 };

    
    // Create the vertices for the points and lines
    for (uint32_t i = 0; i < 175; ++i)
    { 
      
     // float x = arry1[i];
      //float y = arry2[i];

      geometry_msgs::Point p;
    
     p.x = 1000*(data_line_x[i+1]-6.72);
     p.y = 1000*(data_line_y[i+1]-51.18);
      
      double z  = 0.0;
      p.z = z;

      points.points.push_back(p);
      line_strip.points.push_back(p);

      // The line list needs two points for each line
      line_list.points.push_back(p);
      p.z += 0.0;
      line_list.points.push_back(p);
    }


    marker_pub.publish(points);
    marker_pub.publish(line_strip);
    marker_pub.publish(line_list);

    r.sleep();

    f += 0.04;
  }
}
